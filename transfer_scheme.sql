DROP DATABASE IF EXISTS `pruebaDB_nueva`;
CREATE DATABASE `pruebaDB_nueva`;
USE `pruebaDB_nueva`;

DROP TABLE IF EXISTS `or_city`;
CREATE TABLE `or_city` (
    ID_CITY INT(4) PRIMARY KEY,
    CITY_NAME VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    CITY_ABBREVIATION VARCHAR(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    CITY_ALIAS VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    ID_STATE INT(5) NOT NULL
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

DROP TABLE IF EXISTS `or_listdetail`;
CREATE TABLE `or_listdetail` (
    ID_LISTDET INT(11) PRIMARY KEY,
    LIDET_NAME VARCHAR(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

DROP TABLE IF EXISTS `or_route`;
CREATE TABLE `or_route` (
    ID_ROUTE INT(5) PRIMARY KEY,
    ROUTE_ALIAS VARCHAR(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

DROP TABLE IF EXISTS `or_routestop`;
CREATE TABLE `or_routestop` (
    ID_ROUTESTOP INT(6) PRIMARY KEY,
    ID_ROUTE INT(5) NOT NULL,
    ROUTSTP_CITYINI INT(4) NOT NULL,
    ROUTSTP_CITYEND INT(4) NOT NULL,
    ROUTSTP_TRAVELTIME INT(7) NOT NULL,
    ROUTSTP_WAITTIME INT(4) NOT NULL,
    ROUTSTP_ORDER INT(3) NOT NULL,
    ROUTSTP_TYPE INT(6) NOT NULL,
    FOREIGN KEY (ID_ROUTE) REFERENCES or_route(ID_ROUTE),
    FOREIGN KEY (ROUTSTP_CITYINI) REFERENCES or_city(ID_CITY),
    FOREIGN KEY (ROUTSTP_CITYEND) REFERENCES or_city(ID_CITY)
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

DROP TABLE IF EXISTS `or_state`;
CREATE TABLE `or_state` (
    ID_STATE INT(5) PRIMARY KEY,
    ST_NAME VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    ST_ABBREVIATION VARCHAR(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    ST_CODE VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
    ZONE VARCHAR(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- Crear la tabla adicional or_transfer para los transbordos
DROP TABLE IF EXISTS `or_transfer`;
CREATE TABLE `or_transfer` (
    ID_TRANSFER INT AUTO_INCREMENT PRIMARY KEY,
    ID_ROUTE_FROM INT(5) NOT NULL,
    ID_ROUTE_TO INT(5) NOT NULL,
    TRANSFER_POINT INT(4) NOT NULL,
    FOREIGN KEY (ID_ROUTE_FROM) REFERENCES or_route(ID_ROUTE),
    FOREIGN KEY (ID_ROUTE_TO) REFERENCES or_route(ID_ROUTE),
    FOREIGN KEY (TRANSFER_POINT) REFERENCES or_city(ID_CITY)
) ENGINE = INNODB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- Copiar los datos de la base de datos pruebaDB a pruebaDB_nueva

INSERT INTO `or_city` (ID_CITY, CITY_NAME, CITY_ABBREVIATION, CITY_ALIAS, ID_STATE)
SELECT ID_CITY, CITY_NAME, CITY_ABBREVIATION, CITY_ALIAS, ID_STATE FROM `pruebaDB`.`or_city`;

INSERT INTO `or_listdetail` (ID_LISTDET, LIDET_NAME)
SELECT ID_LISTDET, LIDET_NAME FROM `pruebaDB`.`or_listdetail`;

INSERT INTO `or_route` (ID_ROUTE, ROUTE_ALIAS)
SELECT ID_ROUTE, ROUTE_ALIAS FROM `pruebaDB`.`or_route`;

INSERT INTO `or_routestop` (ID_ROUTESTOP, ID_ROUTE, ROUTSTP_CITYINI, ROUTSTP_CITYEND, ROUTSTP_TRAVELTIME, ROUTSTP_WAITTIME, ROUTSTP_ORDER, ROUTSTP_TYPE)
SELECT ID_ROUTESTOP, ID_ROUTE, ROUTSTP_CITYINI, ROUTSTP_CITYEND, ROUTSTP_TRAVELTIME, ROUTSTP_WAITTIME, ROUTSTP_ORDER, ROUTSTP_TYPE FROM `pruebaDB`.`or_routestop`;

INSERT INTO `or_state` (ID_STATE, ST_NAME, ST_ABBREVIATION, ST_CODE, ZONE)
SELECT ID_STATE, ST_NAME, ST_ABBREVIATION, ST_CODE, ZONE FROM `pruebaDB`.`or_state`;

-- Insertar datos en or_transfer basados en las intersecciones encontradas entre el resto de las tablas 
INSERT INTO `or_transfer` (ID_ROUTE_FROM, ID_ROUTE_TO, TRANSFER_POINT)
SELECT DISTINCT
    rs1.ID_ROUTE AS ID_ROUTE_FROM,
    rs2.ID_ROUTE AS ID_ROUTE_TO,
    rs1.ROUTSTP_CITYEND AS TRANSFER_POINT
FROM
    `pruebaDB_nueva`.`or_routestop` rs1
JOIN
    `pruebaDB_nueva`.`or_routestop` rs2
ON
    rs1.ROUTSTP_CITYEND = rs2.ROUTSTP_CITYINI
WHERE
    rs1.ID_ROUTE <> rs2.ID_ROUTE;
